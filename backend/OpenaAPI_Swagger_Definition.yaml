openapi: 3.0.0
servers: []
info: 
  title: Invasive Plant API
  description: This API intended to deploy on aws API Gateway
  version: "1.0.0"
tags:
  - name: Region
    description: The Region route information
  - name: Invasive Species
    description: The Invasive Species route information
  - name: Alternative Spcies
    description: The alternative spcies route information
  - name: Save List
    description: The save list route information
paths:
  /region:
    get: 
      tags:
        - Region
      summary: Get the list of available regions
      operationId: region_GET
      parameters: []
      responses:
        "200": 
          description: Region data available
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "429":
          description: Too Many Requests
        "500":
          description: Internal Server Error
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APILambda.Arn}/invocations"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "aws_proxy"
    post: 
      tags:
        - Region
      summary: Add a region
      operationId: region_POST
      parameters:
        - in: query
          name: region_code_name
          required: true
          description: Region code should be all upper case
          schema: 
            type: string
        - in: query
          name: region_fullname
          required: true
          description: Region fullname all lower case
          schema: 
            type: string
        - in: query
          name: country_fullname
          required: true
          description: Country fullname of the region all lower case
          schema: 
            type: string
        - in: query
          name: geographic_coordinate
          required: false
          description: Geographic coordinate of the region following (latitude, longitude)
          schema: 
            type: string
      responses:
        "200": 
          description: Region data available
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "429":
          description: Too Many Requests
        "500":
          description: Internal Server Error             
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APILambda.Arn}/invocations"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "aws_proxy"

  /region/{region_id}:
    get: 
      tags:
        - Region
      summary: Get a region beased on region_id
      operationId: region_regionID_GET
      parameters:
        - in: path
          name: region_id
          required: true
          schema: 
            type: string
      responses:
        "200": 
          description: Region data available
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "429":
          description: Too Many Requests
        "500":
          description: Internal Server Error             
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APILambda.Arn}/invocations"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "aws_proxy"
    put: 
      tags:
        - Region
      summary: Update data of a region
      description: Note that this is a replace operation based on the provided field (i.e., old data in DB will be replaces by incoming data)
      operationId: region_regionID_PUT
      parameters:
        - in: path
          name: region_id
          required: true
          schema: 
            type: string
        - in: query
          name: region_code_name
          required: false
          description: Region code should be all upper case
          schema: 
            type: string
        - in: query
          name: region_fullname
          required: false
          description: Region fullname all lower case
          schema: 
            type: string
        - in: query
          name: country_fullname
          required: false
          description: Country fullname of the region all lower case
          schema: 
            type: string
        - in: query
          name: geographic_coordinate
          required: false
          description: Geographic coordinate of the region following (latitude, longitude)
          schema: 
            type: string
      responses:
        "200": 
          description: Region data available
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "429":
          description: Too Many Requests
        "500":
          description: Internal Server Error             
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APILambda.Arn}/invocations"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "aws_proxy"
    delete: 
      tags:
        - Region
      summary: Delete a region from region table
      operationId: region_regionID_DELETE
      parameters:
        - in: path
          name: region_id
          required: true
          schema: 
            type: string
      responses:
        "200": 
          description: Region data available
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "429":
          description: Too Many Requests
        "500":
          description: Internal Server Error             
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APILambda.Arn}/invocations"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "aws_proxy"  
  /invasiveSpecies:
    get:
      tags:
        - Invasive Species
      summary: Get the list of available invasive species
      description: This will return all invasive species and its corresponding alternative species
      operationId: getMessage
      responses:
        "200": 
          description: Region data available
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "429":
          description: Too Many Requests
        "500":
          description: Internal Server Error  
    post: 
      tags:
        - Invasive Species
      summary: Add invasive species to database
      operationId: invasiveSpecies_POST
      parameters:
        - in: query
          name: scientific_name
          required: true
          description: Scientific name following lowercase and underscore for space format
          schema: 
            type: array
        - in: query
          name: common_name
          required: false
          description: common name of species should be all lower case
          schema: 
            type: array
        - in: query
          name: resource_links
          required: false
          description: List of links to the resources
          schema: 
            type: array
        - in: query
          name: species_description
          required: false
          description: Description of the alternative species
          schema: 
            type: string
        - in: query
          name: alternative_species
          required: false
          description: List of alternative species based on alternative species_id
          schema: 
            type: array
      responses:
        "200": 
          description: Region data available
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "429":
          description: Too Many Requests
        "500":
          description: Internal Server Error             
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APILambda.Arn}/invocations"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "aws_proxy"
  /invasiveSpecies/{species_id}:
    get: 
      tags:
        - Invasive Species
      summary: Get an invasive species beased on species_id
      description: This will return invasive species of a species_id and its corresponding alternative species
      operationId: invasiveSpecies_speciesID_GET
      parameters:
        - in: path
          name: species_id
          required: true
          schema: 
            type: string
      responses:
        "200": 
          description: Region data available
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "429":
          description: Too Many Requests
        "500":
          description: Internal Server Error             
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APILambda.Arn}/invocations"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "aws_proxy"
    put: 
      tags:
        - Invasive Species
      summary: Update invasive species details
      description: Note that this is a replace operation based on the provided field (i.e., old data in DB will be replaces by incoming data)
      operationId: invasiveSpecies_speciesID_PUT
      parameters:
        - in: path
          name: species_id
          required: true
          schema: 
            type: string
        - in: query
          name: scientific_name
          required: true
          description: Scientific name following lowercase and underscore for space format
          schema: 
            type: array
        - in: query
          name: common_name
          required: false
          description: common name of species should be all lower case
          schema: 
            type: array
        - in: query
          name: resource_links
          required: false
          description: List of links to the resources
          schema: 
            type: array
        - in: query
          name: species_description
          required: false
          description: Description of the alternative species
          schema: 
            type: string
        - in: query
          name: alternative_species
          required: false
          description: List of alternative species based on alternative species_id
          schema: 
            type: array
      responses:
        "200": 
          description: Region data available
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "429":
          description: Too Many Requests
        "500":
          description: Internal Server Error             
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APILambda.Arn}/invocations"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "aws_proxy"
    delete: 
      tags:
        - Invasive Species
      summary: Delete an invasive species from invasive_species table
      operationId: invasiveSpecies_speciesID_DELETE
      parameters:
        - in: path
          name: species_id
          required: true
          schema: 
            type: string
      responses:
        "200": 
          description: Region data available
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "429":
          description: Too Many Requests
        "500":
          description: Internal Server Error             
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APILambda.Arn}/invocations"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "aws_proxy" 

components:
  parameters:
    WidgetID:
      in: path
      name: widgetID
      required: true
      schema:
        type: number
  requestBodies:
    Widget:
      description: Represents a Widget creation.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Widget'
  responses:
    Widgets:
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Widget'
    Widget:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Widget'
  schemas:
    Widget:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        description:
          type: string
      required:
        - id
        - name
        - description